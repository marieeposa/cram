# Generated by Django 5.2.7 on 2025-10-22 09:33

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('resilience', '0003_municipality_barangay_municipality_fk'),
    ]

    operations = [
        migrations.AlterModelOptions(
            name='resiliencescore',
            options={'verbose_name_plural': 'Resilience Scores'},
        ),
        migrations.AddField(
            model_name='barangay',
            name='adm4_pcode',
            field=models.CharField(blank=True, max_length=20, null=True),
        ),
        migrations.AddField(
            model_name='barangay',
            name='building_density',
            field=models.FloatField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='barangay',
            name='built_up_area_pct',
            field=models.FloatField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='barangay',
            name='distance_to_coast',
            field=models.FloatField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='barangay',
            name='is_coastal',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='barangay',
            name='nightlight_mean',
            field=models.FloatField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='barangay',
            name='total_area',
            field=models.FloatField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='barangay',
            name='wealth_index_mean',
            field=models.FloatField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='resiliencescore',
            name='climate_stress_score',
            field=models.FloatField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='resiliencescore',
            name='data_completeness',
            field=models.FloatField(default=0),
        ),
        migrations.AddField(
            model_name='resiliencescore',
            name='flood_risk_score',
            field=models.FloatField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='resiliencescore',
            name='health_vulnerability_score',
            field=models.FloatField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='resiliencescore',
            name='healthcare_access_score',
            field=models.FloatField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='resiliencescore',
            name='infrastructure_score',
            field=models.FloatField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='resiliencescore',
            name='landslide_risk_score',
            field=models.FloatField(blank=True, null=True),
        ),
        migrations.CreateModel(
            name='BarangayClimateData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('flood_100yr_low_pct', models.FloatField(blank=True, null=True)),
                ('flood_100yr_med_pct', models.FloatField(blank=True, null=True)),
                ('flood_100yr_high_pct', models.FloatField(blank=True, null=True)),
                ('flood_25yr_low_pct', models.FloatField(blank=True, null=True)),
                ('flood_25yr_med_pct', models.FloatField(blank=True, null=True)),
                ('flood_25yr_high_pct', models.FloatField(blank=True, null=True)),
                ('flood_5yr_low_pct', models.FloatField(blank=True, null=True)),
                ('flood_5yr_med_pct', models.FloatField(blank=True, null=True)),
                ('flood_5yr_high_pct', models.FloatField(blank=True, null=True)),
                ('landslide_low_pct', models.FloatField(blank=True, null=True)),
                ('landslide_med_pct', models.FloatField(blank=True, null=True)),
                ('landslide_high_pct', models.FloatField(blank=True, null=True)),
                ('pm25_avg', models.FloatField(blank=True, null=True)),
                ('pm10_avg', models.FloatField(blank=True, null=True)),
                ('no2_avg', models.FloatField(blank=True, null=True)),
                ('so2_avg', models.FloatField(blank=True, null=True)),
                ('o3_avg', models.FloatField(blank=True, null=True)),
                ('co_avg', models.FloatField(blank=True, null=True)),
                ('temp_avg', models.FloatField(blank=True, null=True)),
                ('temp_max', models.FloatField(blank=True, null=True)),
                ('temp_min', models.FloatField(blank=True, null=True)),
                ('heat_index_max', models.FloatField(blank=True, null=True)),
                ('precipitation_avg', models.FloatField(blank=True, null=True)),
                ('humidity_avg', models.FloatField(blank=True, null=True)),
                ('ndvi_avg', models.FloatField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('barangay', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='climate_data', to='resilience.barangay')),
            ],
            options={
                'verbose_name_plural': 'Barangay Climate Data',
            },
        ),
        migrations.CreateModel(
            name='BarangayHealthAccess',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hospital_count', models.IntegerField(default=0)),
                ('hospital_nearest_km', models.FloatField(blank=True, null=True)),
                ('rhu_count', models.IntegerField(default=0)),
                ('rhu_nearest_km', models.FloatField(blank=True, null=True)),
                ('health_station_count', models.IntegerField(default=0)),
                ('health_station_nearest_km', models.FloatField(blank=True, null=True)),
                ('birthing_home_count', models.IntegerField(default=0)),
                ('birthing_home_nearest_km', models.FloatField(blank=True, null=True)),
                ('hospital_pop_5min_pct', models.FloatField(blank=True, null=True)),
                ('hospital_pop_15min_pct', models.FloatField(blank=True, null=True)),
                ('hospital_pop_30min_pct', models.FloatField(blank=True, null=True)),
                ('healthcenter_pop_5min_pct', models.FloatField(blank=True, null=True)),
                ('healthcenter_pop_15min_pct', models.FloatField(blank=True, null=True)),
                ('healthcenter_pop_30min_pct', models.FloatField(blank=True, null=True)),
                ('rhu_pop_5min_pct', models.FloatField(blank=True, null=True)),
                ('rhu_pop_15min_pct', models.FloatField(blank=True, null=True)),
                ('rhu_pop_30min_pct', models.FloatField(blank=True, null=True)),
                ('clinic_count', models.IntegerField(default=0)),
                ('clinic_nearest_km', models.FloatField(blank=True, null=True)),
                ('pharmacy_count', models.IntegerField(default=0)),
                ('pharmacy_nearest_km', models.FloatField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('barangay', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='health_access', to='resilience.barangay')),
            ],
            options={
                'verbose_name_plural': 'Barangay Health Access',
            },
        ),
        migrations.CreateModel(
            name='BarangayInfrastructure',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('police_count', models.IntegerField(default=0)),
                ('police_nearest_km', models.FloatField(blank=True, null=True)),
                ('fire_station_count', models.IntegerField(default=0)),
                ('fire_station_nearest_km', models.FloatField(blank=True, null=True)),
                ('shelter_count', models.IntegerField(default=0)),
                ('shelter_nearest_km', models.FloatField(blank=True, null=True)),
                ('school_count', models.IntegerField(default=0)),
                ('school_nearest_km', models.FloatField(blank=True, null=True)),
                ('mobile_speed_avg_mbps', models.FloatField(blank=True, null=True)),
                ('fixed_speed_avg_mbps', models.FloatField(blank=True, null=True)),
                ('building_count', models.IntegerField(blank=True, null=True)),
                ('building_area_total', models.FloatField(blank=True, null=True)),
                ('building_density', models.FloatField(blank=True, null=True)),
                ('drinking_water_count', models.IntegerField(default=0)),
                ('water_nearest_km', models.FloatField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('barangay', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='infrastructure', to='resilience.barangay')),
            ],
            options={
                'verbose_name_plural': 'Barangay Infrastructure',
            },
        ),
        migrations.CreateModel(
            name='DiseaseCase',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('disease_icd10_code', models.CharField(max_length=10)),
                ('disease_name', models.CharField(max_length=200)),
                ('sex', models.CharField(blank=True, max_length=10, null=True)),
                ('age_group', models.CharField(blank=True, max_length=20, null=True)),
                ('date', models.DateField()),
                ('frequency', models.CharField(max_length=10)),
                ('case_total', models.IntegerField(default=0)),
                ('death_total', models.IntegerField(default=0)),
                ('source_name', models.CharField(max_length=100)),
                ('barangay', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='disease_cases', to='resilience.barangay')),
            ],
            options={
                'indexes': [models.Index(fields=['barangay', 'disease_icd10_code', 'date'], name='resilience__baranga_628503_idx')],
            },
        ),
    ]
